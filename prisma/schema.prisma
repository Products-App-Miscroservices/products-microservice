// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Se recomienda colocar modelos en singular y camelCase. Si se quiere tomar las tablas ya creadas ac√° debe ser products en lugar de Product
model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  authorId    String   @db.ObjectId
  price       Float
  images      String[]
  description String
  available   Boolean  @default(true)
  createdAt   DateTime @default(now())

  reviews     Review[]
  reactions   Reaction[]
  productCart ProductCart[]
}

model Review {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  authorId  String   @db.ObjectId
  rating    Int
  comment   String
  available Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product   Product @relation(fields: [productId], references: [id])
  productId String  @db.ObjectId

  reactions Reaction[]
}

model Reaction {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  authorId  String   @db.ObjectId
  reaction  String
  available Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  review   Review @relation(fields: [reviewId], references: [id])
  reviewId String @db.ObjectId

  product   Product @relation(fields: [productId], references: [id])
  productId String  @db.ObjectId
}

model ProductCart {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  authorId String @db.ObjectId

  product   Product @relation(fields: [productId], references: [id])
  productId String  @unique @db.ObjectId

  quantity Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
